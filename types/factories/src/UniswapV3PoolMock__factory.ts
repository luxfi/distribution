/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  UniswapV3PoolMock,
  UniswapV3PoolMockInterface,
} from "../../src/UniswapV3PoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "mockPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "secondsAgos",
        type: "uint32[]",
      },
    ],
    name: "observe",
    outputs: [
      {
        internalType: "int56[]",
        name: "tickCumulatives",
        type: "int56[]",
      },
      {
        internalType: "uint160[]",
        name: "secondsPerLiquidityCumulativeX128s",
        type: "uint160[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mockPrice",
        type: "uint256",
      },
    ],
    name: "setMockPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slot0",
    outputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "uint16",
        name: "observationIndex",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "observationCardinality",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "observationCardinalityNext",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "feeProtocol",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516104b93803806104b98339818101604052604081101561003357600080fd5b5080516020909101516001600160601b0319606092831b8116608052911b1660a052670de0b6b3a764000060005560805160601c60a05160601c61042f61008a600039806103d2525080610230525061042f6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630dfe1681146100675780633850c7bd1461008b578063883bdbfd146100e4578063c7207e74146101ed578063d21220a714610207578063feca9cc01461020f575b600080fd5b61006f61022e565b604080516001600160a01b039092168252519081900360200190f35b610093610252565b604080516001600160a01b03909816885260029690960b602088015261ffff9485168787015292841660608701529216608085015260ff90911660a0840152151560c0830152519081900360e00190f35b610154600480360360208110156100fa57600080fd5b81019060208101813564010000000081111561011557600080fd5b82018360208201111561012757600080fd5b8035906020019184602083028401116401000000008311171561014957600080fd5b509092509050610266565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610198578181015183820152602001610180565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156101d75781810151838201526020016101bf565b5050505090500194505050505060405180910390f35b6101f56103ca565b60408051918252519081900360200190f35b61006f6103d0565b61022c6004803603602081101561022557600080fd5b50356103f4565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b600080549182919060029081908390600190565b606080826102bb576040805162461bcd60e51b815260206004820152601b60248201527f4e656564206174206c65617374206f6e652064617461706f696e740000000000604482015290519081900360640190fd5b8267ffffffffffffffff811180156102d257600080fd5b506040519080825280602002602001820160405280156102fc578160200160208202803683370190505b5091508267ffffffffffffffff8111801561031657600080fd5b50604051908082528060200260200182016040528015610340578160200160208202803683370190505b50905060005b838110156103c25784848281811061035a57fe5b9050602002013563ffffffff1663ffffffff1642036000540283828151811061037f57fe5b602002602001019060060b908160060b815250506000548282815181106103a257fe5b6001600160a01b0390921660209283029190910190910152600101610346565b509250929050565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005556fea264697066735822122027c93f1a1686e44da1fbb90bffdb07161fe90f31f47332558e0e175c4357482264736f6c63430007060033";

type UniswapV3PoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3PoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3PoolMock__factory extends ContractFactory {
  constructor(...args: UniswapV3PoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token0: AddressLike,
    _token1: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token0, _token1, overrides || {});
  }
  override deploy(
    _token0: AddressLike,
    _token1: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token0, _token1, overrides || {}) as Promise<
      UniswapV3PoolMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UniswapV3PoolMock__factory {
    return super.connect(runner) as UniswapV3PoolMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3PoolMockInterface {
    return new Interface(_abi) as UniswapV3PoolMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniswapV3PoolMock {
    return new Contract(address, _abi, runner) as unknown as UniswapV3PoolMock;
  }
}
